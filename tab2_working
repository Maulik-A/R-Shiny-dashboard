library(shiny)
library(shinydashboard)
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)


raw <- read_excel("Pac_dash/PACdb.xlsx")

ui<- fluidPage(
  
  # Application title
  titlePanel("PAC Dashboard"),
  sidebarLayout(
    sidebarPanel(width = 3,
                 selectizeInput(inputId = "sport",
                                label = "Select upto three sports:",
                                choices= raw %>% distinct(Sport),
                                multiple = TRUE,
                                options = list(maxItems = 3),
                                selected="Baseball"
                 ),
                 
                 radioButtons(inputId = "cate",
                              label = "Type of Participants:",
                              choices = list("Total" = "Total",
                                             "Casual" = "Casual",
                                             "Core" = "Core",
                                             "Male"= "Male",
                                             "Female"="Female"),
                              selected = "Total"),
                 
                 selectInput(inputId = "subcat",
                             label = strong("Select a Subcategory here:"),
                             choices = raw %>% distinct(Subcategory)),
                 
                 selectInput(
                   inputId =  "date", 
                   label = "Select time period:", 
                   choices = 2014:as.numeric(format(Sys.Date(),"%Y")),
                   selected = c(2014:2019),
                   multiple = TRUE
                 )
                 
    ),
    
    # Show a plot of the generated distribution
    mainPanel(width = 9,
              plotlyOutput("distPlot")
    )
  )
)



server<-function(input, output) {
  
  #create a dataframe
  df<- reactive({
    raw %>%
      filter(Sport %in% input$sport) %>%
      filter(Subcategory == input$subcat) %>% 
      filter(Category== input$cate) 
  })
  
  
  
  
  output$distPlot <- renderPlotly({
    
    df_plot<- df() %>%
      filter(Year %in% input$date) %>%
      group_by(Year, Sport) %>%
      summarise(Participants = sum(Participants)) %>%
      ungroup() 
    
    q<- ggplot(data=df_plot,mapping= aes(x= Year,y=Participants,group=Sport))+
      geom_line(aes(color=Sport))+
      ylab("Participants(000s)")+
      xlab("Year")+
      ggtitle("Sports comaprision of the participants")
    
    fig<-ggplotly(q)
    fig
 
    
    
  })
  
  
}


shinyApp(ui, server)
