library(shiny)
library(shinydashboard)
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)


raw <- read_excel("Pac_dash/PACdb2.xlsx") %>% select(Year:Participants)

ui<- fluidPage(
  
  # Application title
  titlePanel("PAC Dashboard"),
  sidebarLayout(
    sidebarPanel(width = 3,
                 selectizeInput(inputId = "sport",
                                label = "Select upto two sports:",
                                choices= raw %>% distinct(Sport),
                                multiple = TRUE,
                                options = list(maxItems = 2),
                                selected="Baseball"
                                ),
                 
                 radioButtons(inputId = "cate",
                              label = "Type of Participants:",
                              choices = list("Total" = 1,
                                             "Casual" = 2,
                                             "Core" = 3),
                              selected = 2),
              
                 
                 selectInput(
                   inputId =  "date", 
                   label = "Select time period:", 
                   choices = 2014:as.numeric(format(Sys.Date(),"%Y")),
                   selected = c(2014,2019),
                   multiple = TRUE
                 )
                 
    ),
    
    # Show a plot of the generated distribution
    mainPanel(width = 9,
              plotlyOutput("distPlot")
    )
  )
)



server<-function(input, output) {
  
  #create a dataframe
  df<- reactive({
    raw %>%
      filter(Sport %in% input$sport) %>%
      filter(
        if (input$cate==2) {
          Category =="Casual"
        } else if (input$cate==3){
          Category =="Core"
        } else {
          (Category == "Casual" | Category == "Core")
        }) 
  })
  
  
  
  
  output$distPlot <- renderPlotly({
    
    df_plot<- df() %>%
      filter(Year %in% input$date) %>%
      group_by(Year,Sport) %>%
      summarise(Participants = sum(Participants)) %>%
      ungroup() 
     
     p<- ggplot(data=df_plot,mapping= aes(x= Year,y=Participants,group=Sport))+
     geom_line(aes(color=Sport))+
     geom_point(aes(color=Sport))+
     ylab("Participants(000s)")+
     xlab("Year")+
     ggtitle("Sports comparison over years")
   
   fig<-ggplotly(p)
   fig
    
  })
  
  
}


shinyApp(ui, server)
